name: .NET Core CI

on:
  push:
  pull_request:

jobs:
  build:
    name: Build & Package NuGets
    env:
      NUPKG_MAJOR: 0.999
      CODESIGN_PFX: ${{ secrets.CODESIGN_PFX }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Setup NuGet 5.x
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'

      - name: Setup MAUI
        shell: pwsh
        run: |
          & dotnet workload install maui ios android maccatalyst

      - name: Build
        run: dotnet build --configuration Release

      # - name: Test
      #   run: dotnet test --configuration Release

      - name: Package & Sign NuGets
        shell: pwsh
        run: |
          $VERSION="$env:NUPKG_MAJOR-ci$env:GITHUB_RUN_ID"
          echo "pkgverci=$VERSION" >> $env:GITHUB_ENV
          echo "PACKAGE VERSION: $VERSION"

          New-Item -ItemType Directory -Force -Path .\artifacts
          dotnet pack --output ./artifacts --configuration Release -p:PackageVersion=$VERSION ./ZXing.Net.MAUI/ZXing.Net.MAUI.csproj
          dotnet pack --output ./artifacts --configuration Release -p:PackageVersion=$VERSION ./ZXing.Net.MAUI.Controls/ZXing.Net.MAUI.Controls.csproj
          dotnet pack --output ./artifacts --configuration Release -p:PackageVersion=$VERSION ./ZXing.Net.MAUI.Comet/ZXing.Net.MAUI.Comet.csproj

          try {
            $pfxPath = Join-Path -Path $pwd -ChildPath "codesigncert.pfx"
            [IO.File]::WriteAllBytes("$pfxPath", [System.Convert]::FromBase64String($env:CODESIGN_PFX))

            nuget sign .\artifacts\*.nupkg `
              -CertificatePath $pfxPath `
              -Timestamper http://timestamp.entrust.net/TSS/RFC3161sha2TS `
              -Verbosity detailed
          } catch {
            Write-Warning "Skipping signing due to error: $_"
          }

      - name: Upload NuGet Artifact
        uses: actions/upload-artifact@v4
        with:
          name: zxing-nugets
          path: ./artifacts

  # publish:
  #   name: Publish
  #   needs: build
  #   runs-on: windows-latest
  #   if: github.event_name == 'release'
  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: NuGet
  #         path: NuGet

  #     - name: Setup .NET Core
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: '7.0.x'

  #     - name: Push NuGet
  #       run: |
  #         dotnet nuget push NuGet\*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_ORG_API_KEY }}
